const IPProtocols = [

    "HOPOPT",
    "ICMP",
    "IGMP",
    "GGP",
    "IP-in-IP",
    "ST",
    "TCP",
    "CBT",
    "EGP",
    "IGP",
    "BBN-RCC-MON",
    "NVP-II",
    "PUP",
    "ARGUS",
    "EMCON",
    "XNET",
    "CHAOS",
    "UDP",
    "MUX",
    "DCN-MEAS",
    "HMP",
    "PRM",
    "XNS-IDP",
    "TRUNK-1",
    "TRUNK-2",
    "LEAF-1",
    "LEAF-2",
    "RDP",
    "IRTP",
    "ISO-TP4",
    "NETBLT",
    "MFE-NSP",
    "MERIT-INP",
    "DCCP",
    "3PC",
    "IDPR",
    "XTP",
    "DDP",
    "IDPR-CMTP",
    "TP++",
    "IL",
    "IPv6",
    "SDRP",
    "IPv6-Route",
    "IPv6-Frag",
    "IDRP",
    "RSVP",
    "GREs",
    "DSR",
    "BNA",
    "ESP",
    "AH",
    "I-NLSP",
    "SwIPe",
    "NARP",
    "MOBILE",
    "TLSP",
    "SKIP",
    "IPv6-ICMP",
    "IPv6-NoNxt",
    "IPv6-Opts",
    "CFTP",
    "SAT-EXPAK",
    "KRYPTOLAN",
    "RVD",
    "IPPC",
    "SAT-MON",
    "VISA",
    "IPCU",
    "CPNX",
    "CPHB",
    "WSN",
    "PVP",
    "BR-SAT-MON",
    "SUN-ND",
    "WB-MON",
    "WB-EXPAK",
    "ISO-IP",
    "VMTP",
    "SECURE-VMTP",
    "VINES",
    "TTP",
    "IPTM",
    "NSFNET-IGP",
    "DGP",
    "TCF",
    "EIGRP",
    "OSPF",
    "Sprite-RPC",
    "LARP",
    "MTP",
    "AX.25",
    "OS",
    "MICP",
    "SCC-SP",
    "ETHERIP",
    "ENCAP",
    "GMTP",
    "IFMP",
    "PNNI",
    "PIM",
    "ARIS",
    "SCPS",
    "QNX",
    "A/N",
    "IPComp",
    "SNP",
    "Compaq-Peer",
    "IPX-in-IP",
    "VRRP",
    "PGM",
    "L2TP",
    "DDX",
    "IATP",
    "STP",
    "SRP",
    "UTI",
    "SMP",
    "SM",
    "PTP",
    "IS-IS over IPv4",
    "FIRE",
    "CRTP",
    "CRUDP",
    "SSCOPMCE",
    "IPLT",
    "SPS",
    "PIPE",
    "SCTP",
    "FC",
    "RSVP-E2E-IGNORE",
    "Mobility Header",
    "UDPLite",
    "MPLS-in-IP",
    "manet",
    "HIP",
    "Shim6",
    "WESP",
    "ROHC",
    "Ethernet"
];

const DSCPs: { [ key: number ]: string } = {

    0: "CS0",
    8: "CS1",
    16: "CS2",
    24: "CS3",
    32: "CS4",
    40: "CS5",
    48: "CS6",
    56: "CS7",
    10: "AF11",
    12: "AF12",
    14: "AF13",
    18: "AF21",
    20: "AF22",
    22: "AF23",
    26: "AF31",
    28: "AF32",
    30: "AF33",
    34: "AF41",
    36: "AF42",
    38: "AF43",
    46: "EF",
    44: "VOICE-ADMIT",
    1: "LE"

};

export const IPProtocolToName = ( protocol: number ) =>

    protocol in IPProtocols
    ? IPProtocols[ protocol ]
    : ( protocol < 253 )
    ? "Unassigned"
    : ( protocol < 255 )
    ? "Use for experimentation and testing"
    : "Reserved"

;

export const DSCPToName = ( DSCP: number ) =>

    DSCP in DSCPs
    ? DSCPs[ DSCP ]
    : ( DSCP % 4 === 3 )
    ? "Reserved for experimental or Local Use"
    : "Unknown"

;